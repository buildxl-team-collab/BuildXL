// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

syntax = "proto3";

package BuildXL.Execution.Analyzer;

option csharp_namespace = "BuildXL.Execution.Analyzer";

// Event query should be of this format. It also serves as the key to the DB
message EventTypeQuery{
    
    // ID of the Event - required
    int32 EventTypeID = 1; 
    
    // Other ideas to keep in EventTypeQuery were as follows:
    // string (or int64) Path (or hash of path) = 2;
    // string RewriteContent = 3;
    // int32 WorkerID = 4;
    
    // UUID to make the key unique. TODO: remove once a minimal key is formulated and decided upon
    string UUID = 99;   
}

// The BXL Invocation Event message
message BXLInvocationEvent{

    // Unique identifier for the event - required, TODO: Remove as it may not be needed.
    string UUID = 1;

    // Identifies the worker which invoked this event
    uint32 WorkerID = 2;

    // Identifies the source that called this event
    string SubstSource = 3;
    
    // Identifies the target of this event
    string SubstTarget = 4;

    // Whether the source is valid
    bool IsSubstSourceValid = 5;
    
    // Whether the target is valid
    bool IsSubstTargetValid = 6; 
}

// Contains a list of BXL Invocation Events
message BXLInvocationEventList{

    // List of different BXL Invocation events
    repeated BXLInvocationEvent BXLInvEventList = 1;
}
